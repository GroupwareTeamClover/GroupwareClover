name: CI/CD Pipeline

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Create env.properties file in resources folder
      run: |
        mkdir -p src/main/resources/properties
        echo "properties.file.dbUrl=${{ secrets.DB_URL }}" >> src/main/resources/properties/env.properties
        echo "properties.file.dbUsername=${{ secrets.DB_USERNAME }}" >> src/main/resources/properties/env.properties
        echo "properties.file.dbPassword=${{ secrets.DB_PASSWORD }}" >> src/main/resources/properties/env.properties
        echo "properties.file.port=8080" >> src/main/resources/properties/env.properties
        echo "properties.file.allowed.origins=https://cloveroffice.site, http://localhost:8080, http://192.168.1.5:3000, http://192.168.1.14:3000, http://192.168.1.6:3000, http://192.168.1.7:3000, http://192.168.1.13:3000, http://192.168.190.108:3000, http://192.168.45.23:3000, http://192.168.45.196:3000, http://15.164.2.16:3000, http://192.168.190.108:3000" >> src/main/resources/properties/env.properties
        echo "properties.file.accessKeyID=${{ secrets.ACCESS_KEY_ID }}" >> src/main/resources/properties/env.properties
        echo "properties.file.secretAccessKey=${{ secrets.SECRET_ACCESS_KEY }}" >> src/main/resources/properties/env.properties        

    - name: Build backend with Maven
      run: |
        cd backend
        mvn clean package -DskipTests

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Build frontend
      run: |
        cd frontend
        npm install --legacy-peer-deps
        CI=false npm run build

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: jinhyek0000/backend:latest

    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: jinhyek0000/frontend:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /etc/nginx
          sudo docker-compose pull
          sudo docker-compose up -d