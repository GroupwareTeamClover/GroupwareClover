<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Document">
	<select id="selectDocCodeInfo" resultType="java.util.Map">
		select  c.doc_code_name as code, d.doc_detail_name as name, d.retention_period as period, d.doc_detail_code as detailcode
		from doc_detail_code d
		join doc_code c on d.doc_code=c.doc_code
	</select>
	
	
	<select id="selectMemberInfo" resultType="java.util.Map">
		select d.dept_name as dept, e.emp_name as name,  e.emp_seq as seq, r.role_name as role 
		from employee e
		left outer join department d on e.dept_code=d.dept_code
		left outer join role r on e.role_code=r.role_code
	</select>
	
	<insert id="insertDoc">
    insert into document 
    values(document_sequence.nextval, #{docDetailCode}, #{docStateCode}, #{drafterSeq}, #{egcYn}, 
        <if test="writeDate == null">
            SYSDATE
        </if>
        <if test="writeDate != null">
            #{writeDate}
        </if>,
        null, #{currentApverSeq}, #{finalApverSeq}, null)
    <selectKey keyProperty="docSeq" resultType="int" order="AFTER">
        select document_sequence.currval from dual
    </selectKey>
</insert>
	
	<insert id="insertBusiness">
	    insert into business
	    values(business_sequence.nextval, #{bsTitle}, #{bsContent},
	            <if test="bsWriteDate == null">
	                SYSDATE
	            </if>
	            <if test="bsWriteDate != null">
	                #{bsWriteDate}
	            </if>,
	            #{parentSeq})
	</insert>
	
	<select id="selectDoc" resultType="com.clover.approval.dto.DocumentDTO">
		select doc.*, e.EMP_NAME, d.DEPT_NAME, r.ROLE_NAME 
		from document doc
		join employee e on doc.DRAFTER_SEQ=e.EMP_SEQ
		join department d on e.DEPT_CODE=d.DEPT_CODE
		join role r on e.ROLE_CODE=r.ROLE_CODE
		where doc_seq=#{seq}
	</select>
	
	
	<select id="selectTypeDoc" resultType="java.util.Map">
		select * from ${table}
		where parent_seq=#{seq}
	</select>
	
	
	<select id="selectAllDoc" resultType="com.clover.approval.dto.DocumentDTO">
		SELECT doc.*, 
		       CASE 
		           WHEN b.BS_TITLE IS NOT NULL THEN b.BS_TITLE
		           WHEN d.parent_seq IS NOT NULL THEN '휴가신청서'
		       END AS title,
		       e1.emp_name as drafter_name,
		       e2.emp_name as current_apver_name,
		       e3.emp_name as final_apver_name,
		       de.DOC_DETAIL_NAME as detail_name,
		       st.DOC_STATE_NAME as state_name
		FROM document doc
		LEFT JOIN business b ON doc.doc_seq = b.parent_seq
		LEFT JOIN dayoff d ON doc.doc_seq = d.parent_seq
		LEFT JOIN employee e1 on doc.drafter_seq=e1.emp_seq
		LEFT JOIN employee e2 on doc.CURRENT_APVER_SEQ=e2.emp_seq
		LEFT JOIN employee e3 on doc.FINAL_APVER_SEQ=e3.emp_seq
		LEFT JOIN doc_detail_code de on doc.DOC_DETAIL_CODE=de.DOC_DETAIL_CODE
		LEFT JOIN doc_state_code st on doc.DOC_STATE_CODE=st.DOC_STATE_CODE
	</select>
	
	<select id="selectMainDoc" resultType="com.clover.approval.dto.DocumentDTO">
		SELECT doc.*, 
	       CASE 
	           WHEN b.BS_TITLE IS NOT NULL THEN b.BS_TITLE
	           WHEN d.parent_seq IS NOT NULL THEN '휴가신청서'
	       END AS title,
	       e1.emp_name as drafter_name,
	       e2.emp_name as current_apver_name,
	       e3.emp_name as final_apver_name,
	       de.DOC_DETAIL_NAME as detail_name,
	       st.DOC_STATE_NAME as state_name
	FROM document doc
	LEFT JOIN business b ON doc.doc_seq = b.parent_seq
	LEFT JOIN dayoff d ON doc.doc_seq = d.parent_seq
	LEFT JOIN employee e1 on doc.drafter_seq=e1.emp_seq
	LEFT JOIN employee e2 on doc.CURRENT_APVER_SEQ=e2.emp_seq
	LEFT JOIN employee e3 on doc.FINAL_APVER_SEQ=e3.emp_seq
	LEFT JOIN doc_detail_code de on doc.DOC_DETAIL_CODE=de.DOC_DETAIL_CODE
	LEFT JOIN doc_state_code st on doc.DOC_STATE_CODE=st.DOC_STATE_CODE
	where st.DOC_STATE_NAME = '진행중' and (doc.drafter_seq = #{seq} or doc.CURRENT_APVER_SEQ = #{seq})
	order by doc.WRITE_DATE desc
	</select>
	
</mapper>